version: "3.9"
services:
  appartments:
    build: ./appartments
    ports:
      - "5001:5000"
    volumes:
      - ./data:/home/data

  search:
    build: ./search
    ports:
      - "5002:5000"
    volumes:
      - ./data:/home/data

  reserve:
    build: ./reserve
    ports:
      - "5003:5000"
    volumes:
      - ./data:/home/data



  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - rabbit_lib:/var/lib/rabbitmq
        - rabbit_log:/var/log/rabbitmq
    # logging:
    #   driver: none

  consul:
    image: consul:latest
    ports:
      - "8400:8400"
      - "8500:8500"
      - "8600:8600"
      - "8600:8600/udp"
    command: "agent -server -bootstrap-expect=1 -ui -client 0.0.0.0"

#  agent:
#    image: portainer/agent
#    environment:
#      # REQUIRED: Should be equal to the service name prefixed by "tasks." when
#      # deployed inside an overlay network
#      AGENT_CLUSTER_ADDR: tasks.agent
#      # AGENT_PORT: 9001
#      # LOG_LEVEL: debug
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#      - /var/lib/docker/volumes:/var/lib/docker/volumes
#    networks:
#      - agent_network
#    deploy:
#      mode: global
#      placement:
#        constraints: [node.platform.os == linux]

#  portainer:
#    image: cr.portainer.io/portainer/portainer-ce:2.9.3
#    command: -H tcp://tasks.agent:9001 --tlsskipverify
#    ports:
#      - "9000:9000"
#      - "8000:8000"
#    volumes:
#      - portainer_data:/data
#    networks:
#      - agent_network
#    deploy:
#      mode: replicated
#      replicas: 1
#      placement:
#        constraints: [node.role == manager]

#networks:
#  agent_network:
#    driver: overlay
#    attachable: true

volumes:
  portainer_data:
  rabbit_lib:
  rabbit_log:
